{"version":3,"sources":["components/Tab/Tab.tsx","components/Tabs/Tabs.tsx","components/Task1/TaskOne.tsx","components/Task2/Table/Row/History.tsx","components/Task2/Table/Row/TableRow.tsx","components/Task2/Table/TransactionList.tsx","types/typedefs.ts","components/Task2/Select/Select.tsx","components/mockData/mockData.typedefs.ts","components/Task2/Task2.tsx","App.tsx","index.tsx","components/Task1/TaskOne.module.scss"],"names":["Tab","memo","props","tab","isActive","onChange","_jsx","href","concat","id","onClick","children","title","Tabs","_ref","tabs","selectedTab","Content","_jsxs","className","map","cn","FIRST_TASK","History","history","isOpen","TableRow","TableCell","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","sx","margin","Typography","variant","gutterBottom","component","Table","size","TableHead","align","TableBody","historyRow","scope","date","customerId","price","Row","row","_useState","useState","_useState2","_slicedToArray","open","setOpen","_Fragment","borderBottom","IconButton","KeyboardArrowUpIcon","KeyboardArrowDownIcon","token","value","TransactionList","transitions","preparedData","useMemo","newObject","forEach","obj","_newObject$key$histor","key","currency","push","apply","_toConsumableArray","Object","entries","_ref2","TableContainer","Paper","CurrenciesEnum","currencies","USDT","BTC","ETH","Select","defaultValue","onSelect","selectValue","disabled","TextField","select","label","event","target","helperText","option","MenuItem","type","InputLabelProps","shrink","TABS","styles","wrapper","text","firstSelect","setFirstSelect","_useState3","_useState4","firstValue","setValueSelect","_useState5","_useState6","secondSelect","setSecondSelect","_useState7","_useState8","secondValue","setSecondValue","handleChange","newValue","String","Number","handleSelect","setSelect","m","width","noValidate","autoComplete","data","App","setSelectedTab","handleTabSelection","useCallback","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4d6ac1d9.chunk.js","sourcesContent":["import { FC, memo } from 'react';\nimport { TabType } from '../../types/typedefs';\n\ninterface Props {\n  tab: TabType;\n  isActive: boolean;\n  onChange: (tab: TabType) => void;\n}\n\nexport const Tab: FC<Props> = memo((props) => {\n  const { tab, isActive, onChange } = props;\n\n  return (\n    <a\n      href={`#${tab.id}`}\n      data-cy=\"TabLink\"\n      onClick={() => {\n        if (!isActive) {\n          onChange(tab);\n        }\n      }}\n    >\n      {tab.title}\n    </a>\n  );\n});\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { Tab } from '../Tab/Tab';\nimport { TabType } from '../../types/typedefs';\n\ninterface Props {\n  tabs: TabType[];\n  selectedTab: TabType,\n  onChange: (tab: TabType) => void,\n}\n\nexport const Tabs: FC<Props> = ({ tabs, selectedTab, onChange }) => {\n  const { id, Content } = selectedTab;\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => {\n            const isActive = tab.id === id;\n\n            return (\n              <li\n                className={cn({\n                  'is-active': isActive,\n                })}\n                data-cy=\"Tab\"\n                key={tab.id}\n              >\n                <Tab tab={tab} isActive={isActive} onChange={onChange} />\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        <Content />\n      </div>\n    </div>\n  );\n};\n","import styles from './TaskOne.module.scss';\n\nconst FIRST_TASK = [\n  'FIRST',\n  'SECOND',\n  'SOME THIRD TEXT',\n];\n\nexport const TaskOne = () => {\n  return (\n    <div className={styles.wrapper}>\n      {FIRST_TASK.map((text) => (\n        <h2 className={styles.text} key={text}>\n          {text}\n        </h2>\n      ))}\n    </div>\n  );\n};\n","import { FC, memo } from 'react';\nimport TableCell from '@mui/material/TableCell';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Table from '@mui/material/Table';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableBody from '@mui/material/TableBody';\nimport { Collapse } from '@mui/material';\nimport { TransitionHistory } from '../../../../types/typedefs';\n\ninterface Props {\n  history: TransitionHistory[];\n  isOpen: boolean;\n}\n\nexport const History: FC<Props> = memo((props) => {\n  const { history, isOpen } = props;\n\n  return (\n    <TableRow>\n      <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n        <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\n          <Box sx={{ margin: 1 }}>\n            <Typography variant=\"h6\" gutterBottom component=\"div\">\n              History\n            </Typography>\n\n            <Table size=\"small\" aria-label=\"purchases\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Date</TableCell>\n                  <TableCell>Customer</TableCell>\n                  <TableCell align=\"right\">Total price ($)</TableCell>\n                </TableRow>\n              </TableHead>\n\n              <TableBody>\n                {history.map((historyRow) => (\n                  <TableRow key={historyRow.date}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {historyRow.date}\n                    </TableCell>\n\n                    <TableCell>\n                      {historyRow.customerId}\n                    </TableCell>\n\n                    <TableCell align=\"right\">\n                      {historyRow.price}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Box>\n        </Collapse>\n      </TableCell>\n    </TableRow>\n  );\n});\n","import { FC, useState } from 'react';\nimport TableRow from '@mui/material/TableRow';\nimport TableCell from '@mui/material/TableCell';\nimport IconButton from '@mui/material/IconButton';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport { TransitionHistory } from '../../../../types/typedefs';\nimport { History } from './History';\n\ninterface CurrencyData {\n  token: string;\n  value: number;\n  history: TransitionHistory[];\n}\n\ninterface Props {\n  row: CurrencyData;\n}\n\nexport const Row: FC<Props> = (props) => {\n  const { row } = props;\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen(!open)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.token}\n        </TableCell>\n        <TableCell align=\"right\">{row.value}</TableCell>\n      </TableRow>\n\n      <History history={row.history} isOpen={open} />\n    </>\n  );\n};\n","import { FC, useMemo } from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport Paper from '@mui/material/Paper';\nimport TableRow from '@mui/material/TableRow';\nimport { Row } from './Row/TableRow';\nimport { Transition, TransitionHistory } from '../../../types/typedefs';\n\ninterface Props {\n  transitions: Transition[];\n}\n\nexport const TransactionList: FC<Props> = (props) => {\n  const { transitions } = props;\n\n  const preparedData = useMemo(() => {\n    const newObject: Record<string, {\n      price: number,\n      history: TransitionHistory[]\n    }> = {};\n\n    transitions.forEach((obj) => {\n      const key = obj.currency;\n\n      if (!newObject[key]) {\n        newObject[key] = { price: obj.price, history: [...obj.history] };\n      } else {\n        newObject[key].price += obj.price;\n        newObject[key].history.push(...obj.history);\n      }\n    });\n\n    return Object.entries(newObject).map(([key, value]) => ({\n      token: key,\n      value: value.price,\n      history: value.history,\n    }));\n  }, []);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"collapsible table\">\n        <TableHead>\n          <TableRow>\n            <TableCell />\n            <TableCell>Token</TableCell>\n            <TableCell align=\"right\">Amount</TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {preparedData.map((row) => (\n            <Row key={row.token} row={row} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","export interface TabType {\n  id: number,\n  title: string,\n  Content: () => JSX.Element,\n}\n\nexport interface TransitionHistory {\n  date: string,\n  customerId: string,\n  price: number,\n}\n\nexport interface Transition {\n  id: number;\n  price: number;\n  currency: string;\n  history: TransitionHistory[];\n}\n\nexport enum CurrenciesEnum {\n  USDT = 'USDT',\n  BTC = 'BTC',\n  ETH = 'ETH',\n}\n","import { FC, memo } from 'react';\nimport { MenuItem, TextField } from '@mui/material';\nimport { CurrenciesEnum } from '../../../types/typedefs';\n\ninterface Props {\n  defaultValue?: CurrenciesEnum;\n  selectValue: CurrenciesEnum;\n  onSelect: (value: CurrenciesEnum) => void;\n  onChange: (value: string) => void;\n  value: string;\n  disabled?: boolean;\n}\n\nconst currencies = [{\n  value: CurrenciesEnum.USDT,\n}, {\n  value: CurrenciesEnum.BTC,\n}, {\n  value: CurrenciesEnum.ETH,\n}];\n\nexport const Select: FC<Props> = memo((props) => {\n  const {\n    value,\n    defaultValue,\n    onChange,\n    onSelect,\n    selectValue,\n    disabled,\n  } = props;\n\n  return (\n    <div>\n      <TextField\n        id=\"outlined-select-currency\"\n        select\n        label=\"Select\"\n        defaultValue={defaultValue || CurrenciesEnum.USDT}\n        value={selectValue}\n        onChange={(event) => {\n          onSelect(event.target.value as CurrenciesEnum);\n        }}\n        helperText=\"Please select your currency\"\n      >\n        {currencies.map((option) => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.value}\n          </MenuItem>\n        ))}\n      </TextField>\n\n      <TextField\n        id=\"outlined-number\"\n        label=\"Number\"\n        type=\"number\"\n        disabled={disabled}\n        value={value}\n        onChange={(event) => onChange(event.target.value)}\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n    </div>\n  );\n});\n","import { TaskOne } from '../Task1/TaskOne';\nimport { Task2 } from '../Task2/Task2';\nimport { TabType } from '../../types/typedefs';\n\nexport const TABS: TabType[] = [\n  { id: 1, title: 'Task 1', Content: TaskOne },\n  { id: 2, title: 'Task 2', Content: Task2 },\n];\n","import { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport { TransactionList } from './Table/TransactionList';\nimport { Select } from './Select/Select';\nimport { CurrenciesEnum } from '../../types/typedefs';\nimport transitions from '../../task2.json';\n\nexport const Task2 = () => {\n  const { currencies } = transitions;\n\n  const [firstSelect, setFirstSelect] = useState(CurrenciesEnum.USDT);\n  const [firstValue, setValueSelect] = useState('');\n  const [secondSelect, setSecondSelect] = useState(CurrenciesEnum.BTC);\n  const [secondValue, setSecondValue] = useState('');\n\n  const handleChange = (value: string) => {\n    setValueSelect(value);\n\n    const key = `${firstSelect}-${secondSelect}`;\n    const obj: Record<string, number> = currencies;\n\n    const newValue = obj[key] || 0;\n\n    setSecondValue(() => String(newValue * Number(value)));\n  };\n\n  const handleSelect = (\n    value: CurrenciesEnum,\n    setSelect: (type: CurrenciesEnum) => void,\n  ): void => {\n    setSelect(value);\n\n    const key = `${firstSelect}-${secondSelect}`;\n    const obj: Record<string, number> = currencies;\n\n    const newValue = obj[key] || 0;\n\n    setSecondValue(() => String(newValue * Number(firstValue)));\n  };\n\n  return (\n    <>\n      <Box\n        component=\"form\"\n        sx={{\n          '& .MuiTextField-root': { m: 1, width: '25ch' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <Select\n          onSelect={(value) => handleSelect(value, setFirstSelect)}\n          selectValue={firstSelect}\n          value={firstValue}\n          onChange={handleChange}\n        />\n\n        <Select\n          selectValue={secondSelect}\n          onSelect={(value) => handleSelect(value, setSecondSelect)}\n          value={secondValue}\n          onChange={handleChange}\n          disabled\n        />\n      </Box>\n\n      <TransactionList transitions={transitions.data} />\n    </>\n  );\n};\n","import React, { useCallback, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { TABS as tabs } from './components/mockData/mockData.typedefs';\nimport { TabType } from './types/typedefs';\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  const handleTabSelection = useCallback((tab: TabType) => {\n    setSelectedTab(tab);\n  }, []);\n\n  return (\n    <div className=\"section\">\n      <Tabs\n        tabs={tabs}\n        onChange={handleTabSelection}\n        selectedTab={selectedTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"TaskOne_wrapper__1-NLa\",\"text\":\"TaskOne_text__2j-PK\"};"],"sourceRoot":""}