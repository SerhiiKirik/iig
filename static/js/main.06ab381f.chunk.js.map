{"version":3,"sources":["components/Tab/Tab.tsx","components/Tabs/Tabs.tsx","components/Task1/TaskOne.tsx","components/mockData/mockData.typedefs.ts","App.tsx","index.tsx","components/Task1/TaskOne.module.scss"],"names":["Tab","memo","props","tab","isActive","onChange","_jsx","href","concat","id","onClick","children","title","Tabs","_ref","tabs","selectedTab","Content","_jsxs","className","map","cn","FIRST_TASK","TaskOne","styles","wrapper","text","TABS","App","_useState","useState","_useState2","_slicedToArray","setSelectedTab","handleTabSelection","useCallback","ReactDOM","render","document","getElementById","module","exports"],"mappings":"kNASaA,EAAiBC,gBAAK,SAACC,GAClC,IAAQC,EAA4BD,EAA5BC,IAAKC,EAAuBF,EAAvBE,SAAUC,EAAaH,EAAbG,SAEvB,OACEC,cAAA,KACEC,KAAI,IAAAC,OAAML,EAAIM,IACd,UAAQ,UACRC,QAAS,WACFN,GACHC,EAASF,EAEb,EAAEQ,SAEDR,EAAIS,OAGX,ICdaC,EAAkB,SAAHC,GAAyC,IAAnCC,EAAID,EAAJC,KAAMC,EAAWF,EAAXE,YAAaX,EAAQS,EAART,SAC3CI,EAAgBO,EAAhBP,GAAIQ,EAAYD,EAAZC,QAEZ,OACEC,eAAA,OAAK,UAAQ,gBAAeP,SAAA,CAC1BL,cAAA,OAAKa,UAAU,gBAAeR,SAC5BL,cAAA,MAAAK,SACGI,EAAKK,KAAI,SAACjB,GACT,IAAMC,EAAWD,EAAIM,KAAOA,EAE5B,OACEH,cAAA,MACEa,UAAWE,IAAG,CACZ,YAAajB,IAEf,UAAQ,MAAKO,SAGbL,cAACN,EAAG,CAACG,IAAKA,EAAKC,SAAUA,EAAUC,SAAUA,KAFxCF,EAAIM,GAKf,QAIJH,cAAA,OAAKa,UAAU,QAAQ,UAAQ,aAAYR,SACzCL,cAACW,EAAO,QAIhB,E,gBCvCMK,EAAa,CACjB,QACA,SACA,mBAGWC,EAAU,WACrB,OACEjB,cAAA,OAAKa,UAAWK,IAAOC,QAAQd,SAC5BW,EAAWF,KAAI,SAACM,GAAI,OACnBpB,cAAA,MAAIa,UAAWK,IAAOE,KAAKf,SACxBe,GAD8BA,EAE5B,KAIb,ECfaC,EAAkB,CAC7B,CAAElB,GAAI,EAAGG,MAAO,SAAUK,QAASM,GACnC,CAAEd,GAAI,EAAGG,MAAO,SAAUK,QAASM,ICGxBK,EAAgB,WAC3B,IAAAC,EAAsCC,mBAASf,EAAK,IAAGgB,EAAAC,YAAAH,EAAA,GAAhDb,EAAWe,EAAA,GAAEE,EAAcF,EAAA,GAE5BG,EAAqBC,uBAAY,SAAChC,GACtC8B,EAAe9B,EACjB,GAAG,IAEH,OACEG,cAAA,OAAKa,UAAU,UAASR,SACtBL,cAACO,EAAI,CACHE,KAAMA,EACNV,SAAU6B,EACVlB,YAAaA,KAIrB,ECrBAoB,IAASC,OAAO/B,cAACsB,EAAG,IAAKU,SAASC,eAAe,Q,oBCFjDC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sB","file":"static/js/main.06ab381f.chunk.js","sourcesContent":["import { FC, memo } from 'react';\nimport { TabType } from '../../types/TabType';\n\ninterface Props {\n  tab: TabType;\n  isActive: boolean;\n  onChange: (tab: TabType) => void;\n}\n\nexport const Tab: FC<Props> = memo((props) => {\n  const { tab, isActive, onChange } = props;\n\n  return (\n    <a\n      href={`#${tab.id}`}\n      data-cy=\"TabLink\"\n      onClick={() => {\n        if (!isActive) {\n          onChange(tab);\n        }\n      }}\n    >\n      {tab.title}\n    </a>\n  );\n});\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { TabType } from '../../types/TabType';\nimport { Tab } from '../Tab/Tab';\n\ninterface Props {\n  tabs: TabType[];\n  selectedTab: TabType,\n  onChange: (tab: TabType) => void,\n}\n\nexport const Tabs: FC<Props> = ({ tabs, selectedTab, onChange }) => {\n  const { id, Content } = selectedTab;\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => {\n            const isActive = tab.id === id;\n\n            return (\n              <li\n                className={cn({\n                  'is-active': isActive,\n                })}\n                data-cy=\"Tab\"\n                key={tab.id}\n              >\n                <Tab tab={tab} isActive={isActive} onChange={onChange} />\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        <Content />\n      </div>\n    </div>\n  );\n};\n","import styles from './TaskOne.module.scss';\n\nconst FIRST_TASK = [\n  'FIRST',\n  'SECOND',\n  'SOME THIRD TEXT',\n];\n\nexport const TaskOne = () => {\n  return (\n    <div className={styles.wrapper}>\n      {FIRST_TASK.map((text) => (\n        <h2 className={styles.text} key={text}>\n          {text}\n        </h2>\n      ))}\n    </div>\n  );\n};\n","import { TaskOne } from '../Task1/TaskOne';\nimport { TabType } from '../../types/TabType';\n\nexport const TABS: TabType[] = [\n  { id: 1, title: 'Task 1', Content: TaskOne },\n  { id: 2, title: 'Task 2', Content: TaskOne },\n];\n","import React, { useCallback, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { TabType } from './types/TabType';\nimport { TABS as tabs } from './components/mockData/mockData.typedefs';\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  const handleTabSelection = useCallback((tab: TabType) => {\n    setSelectedTab(tab);\n  }, []);\n\n  return (\n    <div className=\"section\">\n      <Tabs\n        tabs={tabs}\n        onChange={handleTabSelection}\n        selectedTab={selectedTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"TaskOne_wrapper__1-NLa\",\"text\":\"TaskOne_text__2j-PK\"};"],"sourceRoot":""}